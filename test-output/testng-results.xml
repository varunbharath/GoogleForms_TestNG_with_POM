<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Chrome browser launched]]>
    </line>
    <line>
      <![CDATA[Testcase for drop]]>
    </line>
    <line>
      <![CDATA[Testcase for login]]>
    </line>
    <line>
      <![CDATA[Testcase for Sendkeys]]>
    </line>
    <line>
      <![CDATA[Edge browser launched]]>
    </line>
    <line>
      <![CDATA[Testcase for login]]>
    </line>
    <line>
      <![CDATA[Testcase for Sendkeys]]>
    </line>
  </reporter-output>
  <suite started-at="2024-09-13T18:23:39 IST" name="Suite" finished-at="2024-09-13T18:23:58 IST" duration-ms="19490">
    <groups>
    </groups>
    <test started-at="2024-09-13T18:23:39 IST" name="Test" finished-at="2024-09-13T18:23:50 IST" duration-ms="10885">
      <class name="alpha_task.Execution_part">
        <test-method is-config="true" signature="browser_setup(java.lang.String)[pri:0, instance:alpha_task.Execution_part@6c6cb480]" started-at="2024-09-13T18:23:39 IST" name="browser_setup" finished-at="2024-09-13T18:23:42 IST" duration-ms="2771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Chrome browser launched]]>
            </line>
          </reporter-output>
        </test-method> <!-- browser_setup -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:alpha_task.Execution_part@6c6cb480]" started-at="2024-09-13T18:23:42 IST" name="beforeClass" finished-at="2024-09-13T18:23:45 IST" duration-ms="3910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="drop()[pri:0, instance:alpha_task.Execution_part@6c6cb480]" started-at="2024-09-13T18:23:45 IST" name="drop" finished-at="2024-09-13T18:23:46 IST" duration-ms="577" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Testcase for drop]]>
            </line>
          </reporter-output>
        </test-method> <!-- drop -->
        <test-method signature="login1()[pri:0, instance:alpha_task.Execution_part@6c6cb480]" started-at="2024-09-13T18:23:46 IST" name="login1" finished-at="2024-09-13T18:23:48 IST" duration-ms="2267" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Testcase for login]]>
            </line>
          </reporter-output>
        </test-method> <!-- login1 -->
        <test-method signature="sendkey()[pri:0, instance:alpha_task.Execution_part@6c6cb480]" started-at="2024-09-13T18:23:48 IST" name="sendkey" finished-at="2024-09-13T18:23:50 IST" duration-ms="1295" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Testcase for Sendkeys]]>
            </line>
          </reporter-output>
        </test-method> <!-- sendkey -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:alpha_task.Execution_part@6c6cb480]" started-at="2024-09-13T18:23:50 IST" name="afterClass" finished-at="2024-09-13T18:23:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- alpha_task.Execution_part -->
    </test> <!-- Test -->
    <test started-at="2024-09-13T18:23:50 IST" name="Test1" finished-at="2024-09-13T18:23:58 IST" duration-ms="8515">
      <class name="alpha_task.Execution_part">
        <test-method is-config="true" signature="browser_setup(java.lang.String)[pri:0, instance:alpha_task.Execution_part@3a52dba3]" started-at="2024-09-13T18:23:50 IST" name="browser_setup" finished-at="2024-09-13T18:23:52 IST" duration-ms="1978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Edge browser launched]]>
            </line>
          </reporter-output>
        </test-method> <!-- browser_setup -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:alpha_task.Execution_part@3a52dba3]" started-at="2024-09-13T18:23:52 IST" name="beforeClass" finished-at="2024-09-13T18:23:53 IST" duration-ms="1064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="drop()[pri:0, instance:alpha_task.Execution_part@3a52dba3]" started-at="2024-09-13T18:23:53 IST" name="drop" finished-at="2024-09-13T18:23:54 IST" duration-ms="1670" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[bound must be positive]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: bound must be positive
at java.base/java.util.Random.nextInt(Random.java:321)
at alpha_class.Mycontact_dropdown.randomdop(Mycontact_dropdown.java:23)
at alpha_task.Execution_part.drop(Execution_part.java:221)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- drop -->
        <test-method signature="login1()[pri:0, instance:alpha_task.Execution_part@3a52dba3]" started-at="2024-09-13T18:23:54 IST" name="login1" finished-at="2024-09-13T18:23:57 IST" duration-ms="2217" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Testcase for login]]>
            </line>
          </reporter-output>
        </test-method> <!-- login1 -->
        <test-method signature="sendkey()[pri:0, instance:alpha_task.Execution_part@3a52dba3]" started-at="2024-09-13T18:23:57 IST" name="sendkey" finished-at="2024-09-13T18:23:58 IST" duration-ms="1544" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Testcase for Sendkeys]]>
            </line>
          </reporter-output>
        </test-method> <!-- sendkey -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:alpha_task.Execution_part@3a52dba3]" started-at="2024-09-13T18:23:58 IST" name="afterClass" finished-at="2024-09-13T18:23:58 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- alpha_task.Execution_part -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
